@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using QuizHub.Web.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Recuperar Contraseña - QuizHub</PageTitle>

<div class="forgot-container">
    <div class="forgot-card">
        <div class="card-header">
            <div class="header-icon">
                <i class="fa-solid fa-key"></i>
                <div class="icon-ring"></div>
            </div>
            <h1>Recuperar Contraseña</h1>
            <p>Ingresa tu correo electrónico para recibir instrucciones</p>
        </div>

        <div class="card-body">
            <StatusMessage Message="@Message" />
            <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />

                <div class="form-group">
                    <label>
                        <i class="fa-solid fa-envelope"></i>
                        Correo electrónico
                    </label>
                    <InputText @bind-Value="Input.Email" 
                              class="form-control" 
                              autocomplete="username" 
                              placeholder="nombre@ejemplo.com" />
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>

                <button type="submit" class="btn-submit">
                    <i class="fa-solid fa-paper-plane"></i>
                    Enviar Instrucciones
                </button>

                <div class="links-section">
                    <a href="Account/Login" class="back-link">
                        <i class="fa-solid fa-arrow-left"></i>
                        Volver al inicio de sesión
                    </a>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private string? Message => Result switch
    {
        ForgotPasswordResult.Success => "Se ha enviado un enlace de recuperación a tu correo electrónico.",
        ForgotPasswordResult.UserNotFound => "Usuario no encontrado.",
        _ => null
    };

    private ForgotPasswordResult Result { get; set; }

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmit()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            Result = ForgotPasswordResult.UserNotFound;
            return;
        }

        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        Result = ForgotPasswordResult.Success;
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "El correo electrónico es obligatorio")]
        [EmailAddress(ErrorMessage = "El formato del correo electrónico no es válido")]
        public string Email { get; set; } = "";
    }

    private enum ForgotPasswordResult
    {
        Success,
        UserNotFound
    }
}
