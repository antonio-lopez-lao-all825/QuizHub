@using Microsoft.AspNetCore.Identity
@using QuizHub.Web.Data

@inject SignInManager<ApplicationUser> SignInManager

<nav class="manage-nav">
    <div class="nav-header">
        <div class="nav-icon">
            <i class="fa-solid fa-gear"></i>
            <div class="icon-ring"></div>
        </div>
        <h2 class="nav-title">Configuración de Cuenta</h2>
    </div>

    <div class="nav-items">
        <NavLink class="nav-item" href="Account/Manage" Match="NavLinkMatch.All">
            <div class="nav-item-wrapper">
                <div class="nav-item-icon">
                    <i class="fa-solid fa-user"></i>
                </div>
                <span>Perfil</span>
            </div>
        </NavLink>

        <NavLink class="nav-item" href="Account/Manage/Email">
            <div class="nav-item-wrapper">
                <div class="nav-item-icon">
                    <i class="fa-solid fa-envelope"></i>
                </div>
                <span>Email</span>
            </div>
        </NavLink>

        <NavLink class="nav-item" href="Account/Manage/ChangePassword">
            <div class="nav-item-wrapper">
                <div class="nav-item-icon">
                    <i class="fa-solid fa-lock"></i>
                </div>
                <span>Contraseña</span>
            </div>
        </NavLink>

        <NavLink class="nav-item" href="Account/Manage/TwoFactorAuthentication">
            <div class="nav-item-wrapper">
                <div class="nav-item-icon">
                    <i class="fa-solid fa-shield-halved"></i>
                </div>
                <span>Autenticación 2FA</span>
            </div>
        </NavLink>

        <NavLink class="nav-item" href="Account/Manage/PersonalData">
            <div class="nav-item-wrapper">
                <div class="nav-item-icon">
                    <i class="fa-solid fa-database"></i>
                </div>
                <span>Datos Personales</span>
            </div>
        </NavLink>
    </div>
</nav>

@code {
    private bool hasExternalLogins;

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }
}
